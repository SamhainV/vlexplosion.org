CREATE TABLE IF NOT EXISTS Users_TBL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(32) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(254) NOT NULL,
    UNIQUE KEY unique_email (email), -- Valores únicos (no pueden existir dos emails iguales)
    UNIQUE KEY unique_username (username) -- Valores únicos (no pueden existir dos usernames iguales)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS Roles_TBL (
    id INT AUTO_INCREMENT PRIMARY KEY,
    rol_name VARCHAR(255) UNIQUE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS Users_Roles (
    User_Id INT,
    Role_Id INT,
    PRIMARY KEY (User_Id, Role_Id),
    CONSTRAINT fk_user_id FOREIGN KEY (User_Id) REFERENCES Users_TBL(id) ON DELETE CASCADE,
    CONSTRAINT fk_role_id FOREIGN KEY (Role_Id) REFERENCES Roles_TBL(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS AUTHORS_TBL (
  Id INT NOT NULL AUTO_INCREMENT,
  Author_Name VARCHAR (50) NOT NULL, -- Hay una banda que tiene un nombre de 50 letras (buscalo en internet)
  Debut_album_release YEAR, -- Año de lanzamiento del primer album
  Original_members INT, -- Numero de miembros originales
  Breakup_date YEAR, -- Año de separación 
  PRIMARY KEY (Id) -- Clave primaria
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos

CREATE TABLE IF NOT EXISTS GENRES_TBL (
  Id INT NOT NULL AUTO_INCREMENT, -- Identificador del genero
  Genre_Name VARCHAR(30) NOT NULL, -- Nombre del genero musical
  PRIMARY KEY (Id) -- Clave primaria
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos

CREATE TABLE IF NOT EXISTS FORMAT_TBL (
  Id INT NOT NULL AUTO_INCREMENT, -- Identificador del genero
  Format_Name VARCHAR(30) NOT NULL, -- LP / Single / Maxi etc
  PRIMARY KEY (Id) -- Clave primaria
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos

CREATE TABLE IF NOT EXISTS CONDITION_TBL (
  Id INT NOT NULL AUTO_INCREMENT, -- Identificador del genero
  Condition_Name VARCHAR(30) NOT NULL, -- PR / M / EX etc
  PRIMARY KEY (Id) -- Clave primaria
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos


CREATE TABLE IF NOT EXISTS RECORD_LABEL_TBL (
  Id INT NOT NULL AUTO_INCREMENT, -- Identificador del genero
  Record_Label_Name VARCHAR(30) NOT NULL, -- 4AD / Ace Records / Anagram Records etc
  PRIMARY KEY (Id) -- Clave primaria
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos

CREATE TABLE IF NOT EXISTS EDITION_TBL (
  Id INT NOT NULL AUTO_INCREMENT, -- Identificador del genero
  Edition_Name VARCHAR(30) NOT NULL, -- 4AD / Ace Records / Anagram Records etc
  PRIMARY KEY (Id) -- Clave primaria
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos


CREATE TABLE IF NOT EXISTS VINYLS_TBL (
    Id INT NOT NULL AUTO_INCREMENT,
    Title VARCHAR(65) NOT NULL,
    Genres_Id INT NOT NULL,
    Format_Id INT NOT NULL,
    Condition_Id INT NOT NULL,
    Record_Label_Id INT NOT NULL,
    Producer VARCHAR(50) NOT NULL,
    Release_date YEAR NOT NULL,
    Edition_Id INT NOT NULL,
    User_Id INT NOT NULL,
    Is_Favorite BOOLEAN DEFAULT FALSE,
    Is_Desired BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (Id),
    CONSTRAINT fk_genero FOREIGN KEY (Genres_Id) REFERENCES GENRES_TBL(Id) ON DELETE CASCADE,
    CONSTRAINT fk_formato FOREIGN KEY (Format_Id) REFERENCES FORMAT_TBL(Id) ON DELETE CASCADE,
    CONSTRAINT fk_condition FOREIGN KEY (Condition_Id) REFERENCES CONDITION_TBL(Id) ON DELETE CASCADE,
    CONSTRAINT fk_record_label FOREIGN KEY (Record_Label_Id) REFERENCES RECORD_LABEL_TBL(Id) ON DELETE CASCADE,
    CONSTRAINT fk_edition FOREIGN KEY (Edition_Id) REFERENCES EDITION_TBL(Id) ON DELETE CASCADE,
    CONSTRAINT fk_user FOREIGN KEY (User_Id) REFERENCES Users_TBL(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;


CREATE TABLE IF NOT EXISTS AUTOR_VINYLS_TBL ( -- Tabla intermedia
  Autor_Id INT NOT NULL, -- Clave foranea Tabla AUTHORS_TBL
  Vinilo_Id INT NOT NULL, -- Clave foranea Tabla VINYLS_TBL

/*  User_Id INT NOT NULL, -- Clave foranea de Users_TBL, id del usuario que ha insertado el vinilo*/

  PRIMARY KEY (Autor_Id, Vinilo_Id), -- Clave primaria
  CONSTRAINT fk_autor FOREIGN KEY (Autor_Id) REFERENCES AUTHORS_TBL(Id) ON DELETE CASCADE, -- Clave foranea
  CONSTRAINT fk_vinilo FOREIGN KEY (Vinilo_Id) REFERENCES VINYLS_TBL(Id) ON DELETE CASCADE -- Clave foranea
  /*CONSTRAINT fk_user FOREIGN KEY (User_Id) REFERENCES Users_TBL(id) ON DELETE CASCADE -- Clave foranea referenciando el id del usuario*/

) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4; -- Motor de la base de datos

